The goal of this project was to show that the obvious default topologies for
clustering in two dimensions (square, torus, surface of a sphere) have superior
alternatives. This has been clearly demonstrated.

Circle is superior to square but still so awful that it shouldn't be seriously
considered. Having hard boundaries on your space is just bad.

Torus is inferior to to both a Twisted Torus and a Klein Bottle. Unlike
everything else Klein Bottle isn't homogeneous and its mathematical
justification isn't obvious, so it's probably best to consider Twisted Torus
the serious alternative.

Spherical Surface is clearly inferior to Projective Plane. In any project which
is currently using a Spherical Surface you should try switching. It will almost
always produce a small improvement in behavior for very little computational
cost.

Spherical Surface's poor results on large numbers of points are due to each
point having a single antipode. In any data set where that sort of behavior
isn't expected and specifically being searched for it will result in a somewhat
arbitrary other point being selected as the opposite point with an erroneously
large distance. For data sets where having exact opposites is both expected and
searched for the Spherical Surface may work well.

Twisted Torus versus Projective Plane doesn't have a clear winner. For any
given project trying both is a good idea.

The Twisted Torus doesn't generalize trivially to larger numbers of dimensions.
Most likely for each specific number of dimensions there's an analogue based on
the lattice which leads to the best lattice-based kissing number for that
number of dimensions. That would be specified by for each dimension its length
and which other dimensions it causes to get offset when it wraps. Working those
out up to a reasonable number of dimensions may be a good homework assignment
for a mathematician who knows how to do it.

Finding the closest mirror to a given point of another point in a larger number
of dimensions on a torus is straightforward: For each dimension determine
whether it's closest wraping positively, negatively, or not at all in that
dimension and apply those independently. For twisted torus analogues it isn't
so simple and an algorithm for finding the closest mirror in a reasonable
amount of time will have to be worked out for each specific geometry.
